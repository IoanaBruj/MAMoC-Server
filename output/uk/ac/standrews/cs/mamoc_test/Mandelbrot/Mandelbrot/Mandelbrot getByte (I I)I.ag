# Luk/ac/standrews/cs/mamoc_test/Mandelbrot/Mandelbrot;->getByte(I I)I [access_flags=private static]
#
# Parameters:
# - local registers: v0...v27
# - v28:int
# - v29:int
#
# - return:int

getByte-BB@0x0 : [ getByte-BB@0x4 ]
	0       (00000000) const/4              v1, 0
	1       (00000002) const/4              v2, 0

getByte-BB@0x4 : [ getByte-BB@0xc getByte-BB@0x116 ]
	2       (00000004) const/16             v3, 8
	3       (00000008) if-ge                v2, v3, +87

getByte-BB@0xc : [ getByte-BB@0x3e ]
	4       (0000000c) sget-object          v3, Luk/ac/standrews/cs/mamoc_test/Mandelbrot/Mandelbrot;->Crb [D
	5       (00000010) add-int              v4, v28, v2
	6       (00000014) aget-wide            v4, v3, v4
	7       (00000018) sget-object          v3, Luk/ac/standrews/cs/mamoc_test/Mandelbrot/Mandelbrot;->Cib [D
	8       (0000001c) aget-wide            v6, v3, v29
	9       (00000020) sget-object          v3, Luk/ac/standrews/cs/mamoc_test/Mandelbrot/Mandelbrot;->Crb [D
	10      (00000024) add-int              v8, v28, v2
	11      (00000028) add-int/lit8         v8, v8, 1
	12      (0000002c) aget-wide            v8, v3, v8
	13      (00000030) sget-object          v3, Luk/ac/standrews/cs/mamoc_test/Mandelbrot/Mandelbrot;->Cib [D
	14      (00000034) aget-wide            v10, v3, v29
	15      (00000038) const/4              v3, 0
	16      (0000003a) const/16             v12, 49

getByte-BB@0x3e : [ getByte-BB@0xd2 getByte-BB@0xdc ]
	17      (0000003e) mul-double           v13, v4, v4
	18      (00000042) mul-double           v15, v6, v6
	19      (00000046) const/16             v17, 0
	20      (0000004a) sub-double/2addr     v13, v15
	21      (0000004c) sget-object          v15, Luk/ac/standrews/cs/mamoc_test/Mandelbrot/Mandelbrot;->Crb [D
	22      (00000050) add-int              v16, v28, v2
	23      (00000054) aget-wide            v16, v15, v16
	24      (00000058) add-double           v13, v13, v16
	25      (0000005c) mul-double           v15, v4, v6
	26      (00000060) mul-double           v17, v4, v6
	27      (00000064) add-double           v15, v15, v17
	28      (00000068) sget-object          v17, Luk/ac/standrews/cs/mamoc_test/Mandelbrot/Mandelbrot;->Cib [D
	29      (0000006c) aget-wide            v18, v17, v29
	30      (00000070) add-double           v15, v15, v18
	31      (00000074) move-wide            v4, v13
	32      (00000076) move-wide            v6, v15
	33      (00000078) mul-double           v17, v8, v8
	34      (0000007c) mul-double           v19, v10, v10
	35      (00000080) sub-double           v17, v17, v19
	36      (00000084) sget-object          v19, Luk/ac/standrews/cs/mamoc_test/Mandelbrot/Mandelbrot;->Crb [D
	37      (00000088) add-int              v20, v28, v2
	38      (0000008c) add-int/lit8         v20, v20, 1
	39      (00000090) aget-wide            v20, v19, v20
	40      (00000094) add-double           v17, v17, v20
	41      (00000098) mul-double           v19, v8, v10
	42      (0000009c) mul-double           v21, v8, v10
	43      (000000a0) add-double           v19, v19, v21
	44      (000000a4) sget-object          v21, Luk/ac/standrews/cs/mamoc_test/Mandelbrot/Mandelbrot;->Cib [D
	45      (000000a8) aget-wide            v22, v21, v29
	46      (000000ac) add-double           v19, v19, v22
	47      (000000b0) move-wide/from16     v8, v17
	48      (000000b4) move-wide/from16     v10, v19
	49      (000000b8) mul-double           v21, v4, v4
	50      (000000bc) mul-double           v23, v6, v6
	51      (000000c0) add-double           v21, v21, v23
	52      (000000c4) const-wide/high16    v23, 16400 # [4.0]
	53      (000000c8) cmpl-double          v21, v21, v23
	54      (000000cc) const/4              v0, 3
	55      (000000ce) if-lez               v21, +7

getByte-BB@0xd2 : [ getByte-BB@0xda getByte-BB@0xdc ]
	56      (000000d2) or-int/lit8          v3, v3, 2
	57      (000000d6) if-ne                v3, v0, +3

getByte-BB@0xda : [ getByte-BB@0x106 ]
	58      (000000da) goto                 +16

getByte-BB@0xdc : [ getByte-BB@0xf4 getByte-BB@0xfe ]
	59      (000000dc) mul-double           v21, v8, v8
	60      (000000e0) mul-double           v25, v10, v10
	61      (000000e4) const/16             v27, 0
	62      (000000e8) add-double           v21, v21, v25
	63      (000000ec) cmpl-double          v21, v21, v23
	64      (000000f0) if-lez               v21, +7

getByte-BB@0xf4 : [ getByte-BB@0xfc getByte-BB@0xfe ]
	65      (000000f4) or-int/lit8          v3, v3, 1
	66      (000000f8) if-ne                v3, v0, +3

getByte-BB@0xfc : [ getByte-BB@0x106 ]
	67      (000000fc) goto                 +5

getByte-BB@0xfe : [ getByte-BB@0x106 getByte-BB@0x3e ]
	68      (000000fe) add-int/lit8         v12, v12, -1
	69      (00000102) if-gtz               v12, -62

getByte-BB@0x106 : [ getByte-BB@0x4 ]
	70      (00000106) shl-int/lit8         v0, v1, 2
	71      (0000010a) add-int              v1, v0, v3
	72      (0000010e) add-int/lit8         v2, v2, 2
	73      (00000112) goto/16              -87

getByte-BB@0x116 : 
	74      (00000116) not-int              v0, v1
	75      (00000118) return               v0

